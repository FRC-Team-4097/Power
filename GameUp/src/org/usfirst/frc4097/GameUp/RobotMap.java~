// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4097.GameUp;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainrightMotor;
    public static SpeedController driveTrainleftMotor;
    public static RobotDrive driveTrainRobotDrive;
    public static SpeedController elevatorlinearMotor;
    public static DigitalInput elevatorscaleSwitch;
    public static DigitalInput elevatorswitchSwitch;
    public static SpeedController boxTransfermidMotor;
    public static DigitalInput boxTransfermotorStop;
    public static SpeedController boxTransfershootMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainrightMotor = new VictorSP(0);
        LiveWindow.addActuator("driveTrain", "rightMotor", (VictorSP) driveTrainrightMotor);
        
        driveTrainleftMotor = new VictorSP(1);
        LiveWindow.addActuator("driveTrain", "leftMotor", (VictorSP) driveTrainleftMotor);
        
        driveTrainRobotDrive = new RobotDrive(driveTrainleftMotor, driveTrainrightMotor);
        
        driveTrainRobotDrive.setSafetyEnabled(true);
        driveTrainRobotDrive.setExpiration(0.1);
        driveTrainRobotDrive.setSensitivity(0.5);
        driveTrainRobotDrive.setMaxOutput(1.0);

        elevatorlinearMotor = new VictorSP(2);
        LiveWindow.addActuator("Elevator", "linearMotor", (VictorSP) elevatorlinearMotor);
        
        elevatorscaleSwitch = new DigitalInput(0);
        LiveWindow.addSensor("Elevator", "scaleSwitch", elevatorscaleSwitch);
        
        elevatorswitchSwitch = new DigitalInput(1);
        LiveWindow.addSensor("Elevator", "switchSwitch", elevatorswitchSwitch);
        
        boxTransfermidMotor = new VictorSP(3);
        LiveWindow.addActuator("boxTransfer", "midMotor", (VictorSP) boxTransfermidMotor);
        
        boxTransfermotorStop = new DigitalInput(2);
        LiveWindow.addSensor("boxTransfer", "motorStop", boxTransfermotorStop);
        
        boxTransfershootMotor = new VictorSP(4);
        LiveWindow.addActuator("boxTransfer", "shootMotor", (VictorSP) boxTransfershootMotor);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
